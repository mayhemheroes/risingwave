# This file is automatically generated. See `src/frontend/test_runner/README.md` for more information.
- sql: |
    values (ARRAY['foo', 'bar']);
  logical_plan: |
    LogicalValues { rows: [[Array('foo':Varchar, 'bar':Varchar)]], schema: Schema { fields: [*VALUES*_0.column_0:List { datatype: Varchar }] } }
  batch_plan: |
    BatchValues { rows: [[Array('foo':Varchar, 'bar':Varchar)]] }
- sql: |
    values (ARRAY[1, 2+3, 4*5+1]);
  logical_plan: |
    LogicalValues { rows: [[Array(1:Int32, (2:Int32 + 3:Int32), ((4:Int32 * 5:Int32) + 1:Int32))]], schema: Schema { fields: [*VALUES*_0.column_0:List { datatype: Int32 }] } }
  batch_plan: |
    BatchValues { rows: [[Array(1:Int32, (2:Int32 + 3:Int32), ((4:Int32 * 5:Int32) + 1:Int32))]] }
- sql: |
    create table t (v1 int);
    select (ARRAY[1, v1]) from t;
  logical_plan: |
    LogicalProject { exprs: [Array(1:Int32, t.v1)] }
      LogicalScan { table: t, columns: [t.v1, t._row_id] }
  batch_plan: |
    BatchExchange { order: [], dist: Single }
      BatchProject { exprs: [Array(1:Int32, t.v1)] }
        BatchScan { table: t, columns: [t.v1], distribution: SomeShard }
- sql: |
    select ARRAY[null];
  logical_plan: |
    LogicalProject { exprs: [Array(null:Varchar)] }
      LogicalValues { rows: [[]], schema: Schema { fields: [] } }
