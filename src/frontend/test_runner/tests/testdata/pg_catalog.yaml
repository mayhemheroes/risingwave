# This file is automatically generated. See `src/frontend/test_runner/README.md` for more information.
- sql: |
    select * from pg_catalog.pg_type
  logical_plan: |
    LogicalProject { exprs: [pg_type.oid, pg_type.typname] }
      LogicalScan { table: pg_type, columns: [pg_type.oid, pg_type.typname] }
  batch_plan: |
    BatchScan { table: pg_type, columns: [pg_type.oid, pg_type.typname], distribution: Single }
- sql: |
    select * from pg_catalog.pg_namespace
  logical_plan: |
    LogicalProject { exprs: [pg_namespace.oid, pg_namespace.nspname, pg_namespace.nspowner, pg_namespace.nspacl] }
      LogicalScan { table: pg_namespace, columns: [pg_namespace.oid, pg_namespace.nspname, pg_namespace.nspowner, pg_namespace.nspacl] }
  batch_plan: |
    BatchScan { table: pg_namespace, columns: [pg_namespace.oid, pg_namespace.nspname, pg_namespace.nspowner, pg_namespace.nspacl], distribution: Single }
- sql: |
    select * from pg_catalog.pg_cast
  logical_plan: |
    LogicalProject { exprs: [pg_cast.oid, pg_cast.castsource, pg_cast.casttarget, pg_cast.castcontext] }
      LogicalScan { table: pg_cast, columns: [pg_cast.oid, pg_cast.castsource, pg_cast.casttarget, pg_cast.castcontext] }
  batch_plan: |
    BatchScan { table: pg_cast, columns: [pg_cast.oid, pg_cast.castsource, pg_cast.casttarget, pg_cast.castcontext], distribution: Single }
