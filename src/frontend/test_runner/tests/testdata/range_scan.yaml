# This file is automatically generated. See `src/frontend/test_runner/README.md` for more information.
- id: create_table_and_mv
  sql: |
    CREATE TABLE orders (
            order_id BIGINT,
            user_id BIGINT,
            date INTEGER);
    CREATE MATERIALIZED VIEW orders_count_by_user AS
      SELECT user_id, date, count(*) AS orders_count FROM orders GROUP BY user_id, date;
- before:
    - create_table_and_mv
  sql: |
    SELECT * FROM orders_count_by_user WHERE user_id = 42
  batch_plan: |
    BatchExchange { order: [], dist: Single }
      BatchScan { table: orders_count_by_user, columns: [user_id, date, orders_count], scan_ranges: [user_id = Int64(42)] }
- before:
    - create_table_and_mv
  sql: |
    SELECT * FROM orders_count_by_user WHERE user_id < 43
  batch_plan: |
    BatchExchange { order: [], dist: Single }
      BatchScan { table: orders_count_by_user, columns: [user_id, date, orders_count], scan_ranges: [user_id < Int64(43)] }
- before:
    - create_table_and_mv
  sql: |
    SELECT * FROM orders_count_by_user WHERE user_id = 42 + 1
  batch_plan: |
    BatchExchange { order: [], dist: Single }
      BatchScan { table: orders_count_by_user, columns: [user_id, date, orders_count], scan_ranges: [user_id = Int64(43)] }
- before:
    - create_table_and_mv
  sql: |
    SELECT * FROM orders_count_by_user WHERE user_id = 1/0
  batch_error: 'Expr error: NumericOutOfRange'
- before:
    - create_table_and_mv
  sql: |
    SELECT * FROM orders_count_by_user WHERE user_id = 2147483647 + 1
  batch_error: 'Expr error: NumericOutOfRange'
- before:
    - create_table_and_mv
  sql: |
    SELECT * FROM orders_count_by_user WHERE user_id = 'a'
  batch_error: 'Expr error: Cast("str", "i64")'
- before:
    - create_table_and_mv
  sql: |
    SELECT * FROM orders_count_by_user WHERE user_id > 'a'
  batch_error: 'Expr error: Cast("str", "i64")'
- before:
    - create_table_and_mv
  sql: |
    SELECT * FROM orders_count_by_user WHERE user_id = '42'
  batch_plan: |
    BatchExchange { order: [], dist: Single }
      BatchScan { table: orders_count_by_user, columns: [user_id, date, orders_count], scan_ranges: [user_id = Int64(42)] }
- before:
    - create_table_and_mv
  sql: |
    SELECT * FROM orders_count_by_user WHERE user_id = NULL
  batch_plan: |
    BatchValues { rows: [] }
- before:
    - create_table_and_mv
  sql: |
    SELECT * FROM orders_count_by_user WHERE user_id IS NULL
  batch_plan: |
    BatchExchange { order: [], dist: Single }
      BatchFilter { predicate: IsNull($0) }
        BatchScan { table: orders_count_by_user, columns: [user_id, date, orders_count] }
- before:
    - create_table_and_mv
  sql: |
    SELECT * FROM orders_count_by_user WHERE user_id > NULL
  batch_plan: |
    BatchValues { rows: [] }
- before:
    - create_table_and_mv
  sql: |
    SELECT * FROM orders_count_by_user WHERE user_id = 42 AND date = 1111
  batch_plan: |
    BatchExchange { order: [], dist: Single }
      BatchScan { table: orders_count_by_user, columns: [user_id, date, orders_count], scan_ranges: [user_id = Int64(42), date = Int32(1111)] }
- before:
    - create_table_and_mv
  sql: |
    SELECT * FROM orders_count_by_user WHERE user_id > 42 AND date = 1111 AND 2>1
  batch_plan: |
    BatchExchange { order: [], dist: Single }
      BatchFilter { predicate: (2:Int32 > 1:Int32) AND ($1 = 1111:Int32) }
        BatchScan { table: orders_count_by_user, columns: [user_id, date, orders_count], scan_ranges: [user_id > Int64(42)] }
- before:
    - create_table_and_mv
  sql: |
    SELECT * FROM orders_count_by_user WHERE date > 1111 AND user_id = 42 AND 5<6 AND date <= 6666
  batch_plan: |
    BatchExchange { order: [], dist: Single }
      BatchFilter { predicate: (5:Int32 < 6:Int32) }
        BatchScan { table: orders_count_by_user, columns: [user_id, date, orders_count], scan_ranges: [user_id = Int64(42), date > Int32(1111) AND date <= Int32(6666)] }
- before:
    - create_table_and_mv
  sql: |
    SELECT * FROM orders_count_by_user WHERE user_id in (42, 43)
  batch_plan: |
    BatchExchange { order: [], dist: Single }
      BatchScan { table: orders_count_by_user, columns: [user_id, date, orders_count], scan_ranges: [user_id = Int64(42) OR user_id = Int64(43)] }
- before:
    - create_table_and_mv
  sql: |
    SELECT * FROM orders_count_by_user WHERE user_id in (42+1, 44-1)
  batch_plan: |
    BatchExchange { order: [], dist: Single }
      BatchScan { table: orders_count_by_user, columns: [user_id, date, orders_count], scan_ranges: [user_id = Int64(43)] }
- before:
    - create_table_and_mv
  sql: |
    /* If the IN list has a larger type than the column, the InputRef is casted. Currently this case is not converted to scan range yet. */
    SELECT * FROM orders_count_by_user WHERE user_id in (42.0, 43.0)
  batch_plan: |
    BatchExchange { order: [], dist: Single }
      BatchFilter { predicate: In($0::Decimal, 42.0:Decimal, 43.0:Decimal) }
        BatchScan { table: orders_count_by_user, columns: [user_id, date, orders_count] }
- before:
    - create_table_and_mv
  sql: |
    SELECT * FROM orders_count_by_user WHERE user_id in ('42', '43')
  batch_plan: |
    BatchExchange { order: [], dist: Single }
      BatchScan { table: orders_count_by_user, columns: [user_id, date, orders_count], scan_ranges: [user_id = Int64(42) OR user_id = Int64(43)] }
- before:
    - create_table_and_mv
  sql: |
    SELECT * FROM orders_count_by_user WHERE user_id in ('42', '43.0')
  batch_error: 'Expr error: Cast("str", "i64")'
- before:
    - create_table_and_mv
  sql: |
    SELECT * FROM orders_count_by_user WHERE user_id in (2147483648, 2147483649) AND date = 6666
  batch_plan: |
    BatchExchange { order: [], dist: Single }
      BatchFilter { predicate: ($1 = 6666:Int32) }
        BatchScan { table: orders_count_by_user, columns: [user_id, date, orders_count], scan_ranges: [user_id = Int64(2147483648) OR user_id = Int64(2147483649)] }
- before:
    - create_table_and_mv
  sql: |
    SELECT * FROM orders_count_by_user WHERE user_id = 42 AND date in (2222, 3333)
  batch_plan: |
    BatchExchange { order: [], dist: Single }
      BatchScan { table: orders_count_by_user, columns: [user_id, date, orders_count], scan_ranges: [user_id = Int64(42), date = Int32(2222) OR user_id = Int64(42), date = Int32(3333)] }
- before:
    - create_table_and_mv
  sql: |
    /* test duplicate value in in-list */
    SELECT * FROM orders_count_by_user WHERE user_id = 42 AND date in (2222, 2222)
  batch_plan: |
    BatchExchange { order: [], dist: Single }
      BatchScan { table: orders_count_by_user, columns: [user_id, date, orders_count], scan_ranges: [user_id = Int64(42), date = Int32(2222)] }
- before:
    - create_table_and_mv
  sql: |
    /* test NULL in in-list */
    SELECT * FROM orders_count_by_user WHERE user_id = 42 AND date in (2222, NULL)
  batch_plan: |
    BatchExchange { order: [], dist: Single }
      BatchScan { table: orders_count_by_user, columns: [user_id, date, orders_count], scan_ranges: [user_id = Int64(42), date = Int32(2222)] }
- before:
    - create_table_and_mv
  sql: |
    /* test NULL in in-list */
    SELECT * FROM orders_count_by_user WHERE user_id = 42 AND date in (NULL)
  batch_plan: |
    BatchValues { rows: [] }
- before:
    - create_table_and_mv
  sql: |
    /* test multiple in-list */
    SELECT * FROM orders_count_by_user WHERE user_id = 42 AND date in (2222, 3333) AND date in (4444, 3333)
  batch_plan: |
    BatchExchange { order: [], dist: Single }
      BatchScan { table: orders_count_by_user, columns: [user_id, date, orders_count], scan_ranges: [user_id = Int64(42), date = Int32(3333)] }
- before:
    - create_table_and_mv
  sql: |
    /* test eq & in-list */
    SELECT * FROM orders_count_by_user WHERE user_id = 42 AND date in (2222, 3333) AND date = 3333
  batch_plan: |
    BatchExchange { order: [], dist: Single }
      BatchScan { table: orders_count_by_user, columns: [user_id, date, orders_count], scan_ranges: [user_id = Int64(42), date = Int32(3333)] }
- before:
    - create_table_and_mv
  sql: |
    /* test eq & in-list */
    SELECT * FROM orders_count_by_user WHERE user_id = 42 AND date in (2222, 3333) AND date = 4444
  batch_plan: |
    BatchValues { rows: [] }
- before:
    - create_table_and_mv
  sql: |
    SELECT * FROM orders_count_by_user WHERE user_id in (2147483648, 2147483649) AND date in (2222, 3333)
  batch_plan: |
    BatchExchange { order: [], dist: Single }
      BatchFilter { predicate: In($1, 2222:Int32, 3333:Int32) }
        BatchScan { table: orders_count_by_user, columns: [user_id, date, orders_count], scan_ranges: [user_id = Int64(2147483648) OR user_id = Int64(2147483649)] }
- id: create_table_and_mv_ordered
  sql: |
    CREATE TABLE orders (
            order_id BIGINT,
            user_id INTEGER,
            date INTEGER);
    CREATE MATERIALIZED VIEW orders_count_by_user_ordered AS
      SELECT user_id, date, count(*) AS orders_count FROM orders
      GROUP BY user_id, date
      ORDER BY orders_count;
- before:
    - create_table_and_mv_ordered
  sql: |
    SELECT * FROM orders_count_by_user_ordered WHERE user_id = 42
  batch_plan: |
    BatchExchange { order: [], dist: Single }
      BatchFilter { predicate: ($0 = 42:Int32) }
        BatchScan { table: orders_count_by_user_ordered, columns: [user_id, date, orders_count] }
- before:
    - create_table_and_mv_ordered
  sql: |
    SELECT * FROM orders_count_by_user_ordered WHERE user_id > 42 AND orders_count = 10
  batch_plan: |
    BatchExchange { order: [], dist: Single }
      BatchScan { table: orders_count_by_user_ordered, columns: [user_id, date, orders_count], scan_ranges: [orders_count = Int64(10), user_id > Int32(42)] }
- before:
    - create_table_and_mv_ordered
  sql: |
    SELECT * FROM orders_count_by_user_ordered WHERE orders_count = 10
  batch_plan: |
    BatchExchange { order: [], dist: Single }
      BatchScan { table: orders_count_by_user_ordered, columns: [user_id, date, orders_count], scan_ranges: [orders_count = Int64(10)] }
- id: create_small
  sql: |
    CREATE TABLE t(x smallint);
    CREATE MATERIALIZED VIEW mv AS
      SELECT x from t group by x;
- before:
    - create_small
  sql: |
    /* When the constant has a larger type and cannot be casted to the column's type, we can't convert it to scan range yet. */
    SELECT * FROM mv WHERE x = 60000;
  batch_plan: |
    BatchExchange { order: [], dist: Single }
      BatchFilter { predicate: ($0 = 60000:Int32) }
        BatchScan { table: mv, columns: [x] }
- before:
    - create_small
  sql: |
    /* When the constant has a larger type and cannot be casted to the column's type, we can't convert it to scan range yet. */
    SELECT * FROM mv WHERE x < 60000;
  batch_plan: |
    BatchExchange { order: [], dist: Single }
      BatchFilter { predicate: ($0 < 60000:Int32) }
        BatchScan { table: mv, columns: [x] }
